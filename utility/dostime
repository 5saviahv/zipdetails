#!/usr/bin/perl

use warnings;
use strict;

use feature 'say';

my $value = shift;

# allow value to be hpassed as 0x1234, or 1234
$value = eval "$value + 0";

my $unix = _dosToUnixTime($value) ;
say _dosToUnixTime($value) // "UNKNOWN";
say scalar gmtime($unix)
    if defined $unix;;


sub _dosToUnixTime
{
    my $dt = shift;

    # Mozilla xpi files have empty datetime
    # This is not a valid Dos datetime value
    return 0 if $dt == 0 ;

    my $year = ( ( $dt >> 25 ) & 0x7f ) + 80;
    my $mon  = ( ( $dt >> 21 ) & 0x0f ) - 1;
    my $mday = ( ( $dt >> 16 ) & 0x1f );

    my $hour = ( ( $dt >> 11 ) & 0x1f );
    my $min  = ( ( $dt >> 5  ) & 0x3f );
    my $sec  = ( ( $dt << 1  ) & 0x3e );

    use Time::Local ;
    my $time_t;
    eval
    {
        # Use eval to catch crazy dates
        $time_t = Time::Local::timegm( $sec, $min, $hour, $mday, $mon, $year);
    }
    or do
    {
        my $dosDecode = $year+1900 . sprintf "-%02d-%02d %02d:%02d:%02d", $mon, $mday, $hour, $min, $sec;
        say sprintf "'Time' value %04X decodes to '$dosDecode': not a valid DOS date/time: $@", $dt ;
        return undef
    };

    return $time_t;

}